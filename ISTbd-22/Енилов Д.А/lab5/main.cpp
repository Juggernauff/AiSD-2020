#include <iostream>
#include <cstdio>
#include <fstream>

using namespace std;

void Simple_Merging_Sort (char *name){ 

    int i,j;
    FILE *f,*f1,*f2;//указатели на потоки данных
    int count_elements=0;//количество элементов
    int value1=0,value2=0;//хранилища для десятичных чисел
    int counter;//счетчик-предел
    if ( (f = fopen(name,"r")) == NULL )//Открыли файл чтобы посчитать количество элементов
    printf("\nERROR, file not found");
    else 
    {//узнаем количество элементов в потоке данных
    while ( !feof(f) ) {
      fscanf(f,"%d",&value1);
      count_elements++;
    }
    fclose(f);//закрываем файл за собой
    }

    counter=1;
    while(counter<count_elements){//пока счетчик меньше количества файлов
        f=fopen(name,"r");//вновь открываем наш файл
        f1=fopen("smsort_1","w");//открываем вспомогательный файл1
        f2=fopen("smsort_2","w");//открываем вспомогательный файл2

        if(!feof(f))//если файл не закончился
        fscanf(f,"%d",&value1);//считываем десятичное число из f в value
        //ФАЗА РАСПРЕДЕЛЕНИЯ
        //Далее мы расфасовываем элементы по вспомогательным файлам
        while(!feof(f)){//пока файл не закончился
            for(i=0;i<counter&&!feof(f);i++){//повторяем counter раз
            fprintf(f1,"%d ",value1);//помещаем value в f1 
            fscanf(f,"%d",&value1);//помещаем десятичное число из f1 в value
            }
            for(j=0;j<counter&&!feof(f);j++){//повторяем counter раз
            fprintf(f2,"%d ",value1);//помещаем value в f2 
            fscanf(f,"%d",&value1);//помещаем десятичное число из f1 в value
            }
        }
        fclose(f1);//закрываем все ранее открытые файлы
        fclose(f2);
        fclose(f);
        //ФАЗА2 СЛИЯНИЕ
        //снова их открываем
        //Теперь мы будем редактировать исходный файл, просто просматривая дополнительные файлы
        f=fopen(name,"w");
        f1=fopen("smsort_1","r");
        f2=fopen("smsort_2","r");

        if(!feof(f1))//если файл1 не закончился
        fscanf(f1,"%d",&value1);//помещаем десятичное число из файла1 в value

        if(!feof(f2))//если файл2 не закончился
        fscanf(f2,"%d",&value2);//помещаем десятичное число из файла2 в value2

        while(!feof(f1)&&!feof(f2)){//пока один из файлов не закончится
            i=0,j=0;//номера рассматриваемых элементов
            while(i<counter&&j<counter&&!feof(f1)&&!feof(f2)){//пока i и j меньше счетчика
                if(value1<value2){//если десятичное число "слева"(в левом файле) меньше числа "справа"(в правом файле),
                //то все отлично
                    fprintf(f,"%d ",value1);//записываем в файл меньшее, value("левое число")
                    fscanf(f1,"%d",&value1);//движемся вправо в файле1
                    i++;//смена номера, мы ведь двинулись направо 
                }
                else
                {//если десятичное число слева больше, чем справа, то это совершенно нам не подходит
                //поэтому 
                    fprintf(f,"%d ",value2);//записываем в файл меньшее, value2("правое число")
                    fscanf(f2,"%d",&value2);//движемся вправо в файле2
                    j++;//смена номера, мы ведь двинулись направо
                }
            }//после того как исчерпались значения "левого" или "правого" файла, 
            //надо записать оставшееся значение, ну или значения, зависит от ситуации в файл
            while(i<counter&&!feof(f1)){//пока номер "левых" элементов не уткнулся в потолок
                fprintf(f,"%d ",value1);//выводим значение из value в файл
                fscanf(f1,"%d",&value1);//принимаем в value следующее значение из f1
                i++;
            }
            while(j<counter&&!feof(f2)){//пока номер "правых" элементов не уткнулся в потлок
                fprintf(f,"%d ",value2);//выводим значение из value2 в файл
                fscanf(f2,"%d",&value2);//принимаем в value2 след. значение из f2
                j++;
            }
        }
        //просто забираем все значения в файл из доп.файлов
        while(!feof(f1)){// видимо контрольный забор
            fprintf(f,"%d ",value1);
            fscanf(f1,"%d",&value1);
        }
        while(!feof(f2)){
            fprintf(f,"%d ",value2);
            fscanf(f2,"%d",&value2);
        }
        fclose(f);
        fclose(f1);
        fclose(f2);
        counter *= 2;//так как мы сформировали упорядоченные пары, четверки...и.т.д. увеличиваем предел в 2 раза
    }
    remove("smsort_1");//уничтожаем ненужные файлы
    remove("smsort_2");
 }
int main()
{
    Simple_Merging_Sort ("file.txt");
    return 0;
}
   